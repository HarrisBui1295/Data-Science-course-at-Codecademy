-- First, find the total score of all the stories.
SELECT SUM(score)
FROM hacker_news;

-- Find the individual users who have gotten combined scores of more than 200, and their combined scores.
SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) > 200
ORDER BY 2 DESC;

--How many times has each offending user posted this link?
SELECT user, COUNT(*) AS 'count'
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY user
ORDER BY COUNT(*) DESC;

--Which of these sites feed Hacker News the most?
SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
   ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;

--Letâ€™s write a query that returns three columns
--The hours of the timestamp
--The average score for each hour
--The count of stories for each hour
SELECT strftime('%H', timestamp), ROUND(AVG(score),1) AS 'average score', COUNT(*)
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 1 DESC
LIMIT 10;





